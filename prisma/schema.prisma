// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Team {
  id               String        @id @default(uuid())
  teamName         String
  teamLocalization String
  teamCountry      String
  teamLeague       String
  teamGrade        EnumTeamGrade
  teamLogo         String?
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
  players          Player[]

  @@map("teams")
}

model Position {
  id           String                 @id @default(uuid())
  basePosition EnumPlayerPositionBase
  positionRole EnumPlayerPositionRole
  roleType     EnumRoleType[]
  createdAt    DateTime               @default(now())
  updatedAt    DateTime               @updatedAt
  player       Player[]

  @@map("positions")
}

model Player {
  id             String   @id @default(uuid())
  name           String
  birthdate      DateTime
  lenght         Int
  weight         Int
  jersey         Int
  playerImage    String?
  corners        Int
  crossing       Int
  dribbling      Int
  finishing      Int
  firstTouch     Int
  freeKickTaking Int
  heading        Int
  longShots      Int
  longThrows     Int
  marking        Int
  passing        Int
  penaltyTaking  Int
  tackling       Int
  technique      Int
  agression      Int
  anticipation   Int
  bravery        Int
  composure      Int
  concentration  Int
  decisions      Int
  determination  Int
  flair          Int
  leadership     Int
  offTheBall     Int
  positioning    Int
  teamWork       Int
  vision         Int
  workRate       Int
  acceleration   Int
  agility        Int
  balance        Int
  jumpingReach   Int
  naturalFitness Int
  pace           Int
  stamina        Int
  strenght       Int
  team           Team     @relation(fields: [teamId], references: [id], onDelete: Cascade)
  teamId         String
  position       Position @relation(fields: [positionId], references: [id], onDelete: Cascade)
  positionId     String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("players")
}

//Enums
enum EnumTeamGrade {
  A
  B
  C
  D
  E
}

enum EnumPlayerPositionBase {
  Goalkeeper
  Defenser
  Midfielder
  Winger
  Striker
}

enum EnumPlayerPositionRole {
  Goalkeeper
  SweeperKeeper
  WideCentreBack
  CentralDefender
  Libero
  BallPlayingDefender
  NoNonsenseCentreBack
  DefensiveMidfielder
  DeepLyingPlaymaker
  BallWinningMidfielder
  AnchorMan
  HalfBack
  Regista
  RoamingPlaymaker
  SegundoVolante
  CentralMidfielder
  BoxToBoxMidfielder
  AdvancedPlaymaker
  Mezzala
  Carrilero
  FullBack
  WingBack
  NoNonsenseFullBack
  CompleteWingBack
  InvertedWingBack
  WideMidfielder
  Winger
  DefensiveWinger
  WidePlaymaker
  InvertedWinger
  InsideForward
  WideTargetMan
  Raumdeuter
  AttackingMidfielder
  Trequartista
  Enganche
  ShadowStriker
  DeepLyingForward
  AdvancedForward
  TargetMan
  Poacher
  CompleteForward
  PressingForward
  FalseNine
}

enum EnumRoleType {
  Attack
  Support
  Defend
  Stopper
  Cover
  Automatic
}
